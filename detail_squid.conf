###Kısa bir bilgi###########################################################################################################
acl:
ACL öğeleri, "acl" sözcüğü ile başlayan ve herhangi bir istek hareketine karşı gerçekleştirilen sınama türlerini temsil eden 
yönerge satırlarıdır.

access list rules:
Erişim listesi kuralları, bir dizi ACL öğesinin izlediği bir izin veya reddi eyleminden oluşur ve belirli bir istek için hangi
eylemin veya sınırlamanın zorlanacağını belirtmek için kullanılır. Sırayla kontrol edilirler ve kurallardan biri uygun 
olduğunda, arama listesi sonlandırılır. Bir kural birden fazla ACL öğesine sahipse, bir boolean AND işlemi olarak 
uygulanır (kuralın eşleşmesi için kuralın tüm ACL öğeleri eşleşmelidir)

############################################################################################################################

http_port : Öntanımlı proxy port 3128 ben 8080 olarak değiştirdim
http_access deny all : Herkezi engelle
http_access allow all : Herkeze izin ver 
visible_hostname : Sunucu adının görünmesi

access_log daemon: Squid Access.Log yolunu veya adını değiştirmek istersen

#####################################################################################################################

Direk belirli Domainleri' leri tanimlamak icin
acl yasak_site dstdomain .facebook.com youtube.com kgcoskun.com

Bir Dosya icinde tanimladigimiz tum Domainler
acl blockeddomain dstdomain "/etc/squid/blocked.domains.acl"

Bir IP icin ilgili IP 'yi Statik'e çektikden veya DHCP üzerinde Rezerve ettikten sonra, bir kullanici ile 
mantıksal olarak eşleştirebiliriz örneğin;
acl gokhan src 172.28.34.34
veya hem kablolu ve kablosuz erişimlere sahib bir Laptop'u varsa
acl gokhan src 172.28.34.34 172.28.34.35 

URL içinde istemediğimiz uzantılar için örnek exe dosyaları
acl url_istenmeyen urlpath_regex  \.ex \.ex* \.EX \.EX*

sonrasında bu tanimladigmiz degiskenler icin engelleme getireceksek
http_access deny blockeddomain
http_access deny yasak_site

Bir diğer unsurda dahil ve dışında tanımları (match and exept) örneğin
http_access deny blockeddomain !gokhan      : gokhan kullanıcısı dışında herkeze blockeddomain içindeki domainleri engelle
                                              yani gokhan kullanıcısına izin ver.

Http Requestleri (GET, POST) kontol edbilirsiniz
acl blockeddomain_get method GET
acl diger method PUT POST
http_access deny blockeddomain_get

Kuralları Zaman bazlı yapılandırmak için, saat kavramı 00:00 - 24:00 gün kavramı hafta içi 
 Monday Tuesday Wendesday tHursday Friday olarak tanımlanabilir hafta sonu da sAturday Sunday yani (MTWHFAS)
acl haftaici time M T W H 7:30-21:00
acl cuma time F 7:30-22:00
acl cumartesi time A 7:00-21:30
http_access allow blockeddomain gokhan cumartesi
 
#refresh_pattern i anlatmak icin ilk kural olan
#refresh_pattern -i \.gif$ 1440 20% 10080
#kullanilmistir, ornege gore;
#Isimleri .gif veya .GIF (yani, goruntu dosyalari) ile biten tum nesneler icin sure sonu basligi yoksa,
Yasi (nesnenin onbellek sunucusunda ne kadar kaldigi) 1,440 dakikadan azsa, o zaman taze oldugunu dusun ve servis yapmaya devam et ve islemi durdur
Eger yasi 10.080 dakikadan fazla ise, bayat olarak degerlendir ve yeni bir kopyasini almak icin orijinal sunucusuna git ve durdur islemi durdur
Yoksa yasi, min ve max degerleri arasinda bulunuyorsa, tazeligi belirlemek icin lm faktorunu kullanin. Bir faktor, onbellek sunucunuzdaki yasin, orijinal sunucu uzerindeki nesne olusturma veya degistirme yuzdesi olarak belirtilen doneme oranidir. Dolayisiyla, nesne 10.000 dakika once orijinal sunucusunda olusturulduysa ve 1.800 dakika (yani yasi) onbellek sunucumda olsaydi, lm faktoru 1.800 / 10.000 =% 18'dir. Birim faktoru yenileme duzenimizdeki (% 20) yuzdeden daha dusukse, nesne taze kabul edilir. Servis et ve durdur
Aksi takdirde nesne bayat, orijinal sunucudan yeni bir kopya cek.

refresh_pattern -i \.gif$ 1440 20% 10080 
 


